services:
  app-invoices:
    build: ./app-invoices 
    env_file:
      - ./app-invoices/.env
    networks:
      - microservices-net
    depends_on:
      - invoices_pg
      - broker

  app-orders:
    build: ./app-orders 
    env_file:
      - ./app-orders/.env
    networks:
      - microservices-net
    depends_on:
      - orders_pg
      - broker

  invoices_pg:
    image: bitnami/postgresql:latest
    ports:
      - "5483:5482"
    env_file:
      - ./app-invoices/.env
    volumes:
      - invoices_pg_data:/bitnami/postgresql
    networks:
      - microservices-net

  orders_pg:
    image: bitnami/postgresql:latest
    ports:
      - "5482:5482"
    env_file:
      - ./app-orders/.env
    volumes:
      - orders_pg_data:/bitnami/postgresql
    networks:
      - microservices-net

  broker:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "16686:16686" #UI
      - "6831:6831/udp" # send traces
      - "14268:14268" # traces http
      - "4317:4317" # OTLP/gPRC
      - "4318:4318" # OTLP/HTTP

  api-gateway:
    image: kong:3.9
    environment:
      KONG_DATABASE: 'off'
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_DECLARATIVE_CONFIG: '/kong/config.yaml'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
     - './docker/kong/config.yaml:/kong/config.yaml'
    ports:
     - "8000:8000"
     - "8001:8001"
     - "8002:8002" # kong admin GUI
     - "8443:8443"
     - "8444:8444"

volumes:
  rabbitmq_data:

networks:
  microservices-net:
    driver: bridge